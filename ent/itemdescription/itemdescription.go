// Code generated by entc, DO NOT EDIT.

package itemdescription

const (
	// Label holds the string label denoting the itemdescription type in the database.
	Label = "item_description"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"

	// Table holds the table name of the itemdescription in the database.
	Table = "item_descriptions"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "item_descriptions"
	// OwnerInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	OwnerInverseTable = "items"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "item_item_description"
)

// Columns holds all SQL columns for itemdescription fields.
var Columns = []string{
	FieldID,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the ItemDescription type.
var ForeignKeys = []string{
	"item_item_description",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
