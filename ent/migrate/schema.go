// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ItemsColumns holds the columns for the "items" table.
	ItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ItemsTable holds the schema information for the "items" table.
	ItemsTable = &schema.Table{
		Name:        "items",
		Columns:     ItemsColumns,
		PrimaryKey:  []*schema.Column{ItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ItemDescriptionsColumns holds the columns for the "item_descriptions" table.
	ItemDescriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
		{Name: "item_item_description", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ItemDescriptionsTable holds the schema information for the "item_descriptions" table.
	ItemDescriptionsTable = &schema.Table{
		Name:       "item_descriptions",
		Columns:    ItemDescriptionsColumns,
		PrimaryKey: []*schema.Column{ItemDescriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "item_descriptions_items_item_description",
				Columns: []*schema.Column{ItemDescriptionsColumns[2]},

				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ItemGroupsColumns holds the columns for the "item_groups" table.
	ItemGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ItemGroupsTable holds the schema information for the "item_groups" table.
	ItemGroupsTable = &schema.Table{
		Name:        "item_groups",
		Columns:     ItemGroupsColumns,
		PrimaryKey:  []*schema.Column{ItemGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ItemVariationsColumns holds the columns for the "item_variations" table.
	ItemVariationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "variant_name", Type: field.TypeString},
		{Name: "item_item_variation", Type: field.TypeInt, Nullable: true},
	}
	// ItemVariationsTable holds the schema information for the "item_variations" table.
	ItemVariationsTable = &schema.Table{
		Name:       "item_variations",
		Columns:    ItemVariationsColumns,
		PrimaryKey: []*schema.Column{ItemVariationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "item_variations_items_item_variation",
				Columns: []*schema.Column{ItemVariationsColumns[2]},

				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ItemItemGroupColumns holds the columns for the "item_item_group" table.
	ItemItemGroupColumns = []*schema.Column{
		{Name: "item_id", Type: field.TypeInt},
		{Name: "item_group_id", Type: field.TypeInt},
	}
	// ItemItemGroupTable holds the schema information for the "item_item_group" table.
	ItemItemGroupTable = &schema.Table{
		Name:       "item_item_group",
		Columns:    ItemItemGroupColumns,
		PrimaryKey: []*schema.Column{ItemItemGroupColumns[0], ItemItemGroupColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "item_item_group_item_id",
				Columns: []*schema.Column{ItemItemGroupColumns[0]},

				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "item_item_group_item_group_id",
				Columns: []*schema.Column{ItemItemGroupColumns[1]},

				RefColumns: []*schema.Column{ItemGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ItemsTable,
		ItemDescriptionsTable,
		ItemGroupsTable,
		ItemVariationsTable,
		ItemItemGroupTable,
	}
)

func init() {
	ItemDescriptionsTable.ForeignKeys[0].RefTable = ItemsTable
	ItemVariationsTable.ForeignKeys[0].RefTable = ItemsTable
	ItemItemGroupTable.ForeignKeys[0].RefTable = ItemsTable
	ItemItemGroupTable.ForeignKeys[1].RefTable = ItemGroupsTable
}
